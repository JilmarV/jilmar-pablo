name: Deploy

on:
  push:
    branches: [main]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: SSH Deploy
        env:
          SERVER_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          GIT_DEPLOY_KEY: ${{ secrets.DEPLOY_KEY }}
          HOST_NAME: ${{ secrets.SSH_HOST }}
          USER_NAME: ${{ secrets.USER_NAME }}
          SSH_PORT: ${{ secrets.SSH_PORT }}
          PROJECT_PATH: ${{ secrets.PROJECT_PATH }}
          GIT_REPO: ${{ secrets.GIT_REPO }}
          ENV_CONTENT: |
            MYSQL_DATABASE=${{ secrets.MYSQL_DATABASE }}
            MYSQL_USER=${{ secrets.MYSQL_USER }}
            MYSQL_PASSWORD=${{ secrets.MYSQL_PASSWORD }}
            MYSQL_ROOT_PASSWORD=${{ secrets.MYSQL_ROOT_PASSWORD }}
            APP_API_KEY=${{ secrets.APP_API_KEY }}
            DATABASE_URL=${{ secrets.DATABASE_URL }}
            VITE_BACKEND_URL=${{ secrets.VITE_BACKEND_URL }}
        run: |
          set -e
          mkdir -p ~/.ssh
          echo "$SERVER_PRIVATE_KEY" > ~/.ssh/server_key
          chmod 600 ~/.ssh/server_key
          ssh-keyscan -p "$SSH_PORT" -H "$HOST_NAME" >> ~/.ssh/known_hosts

          ssh -T -p "$SSH_PORT" -o StrictHostKeyChecking=no -i ~/.ssh/server_key "$USER_NAME@$HOST_NAME" <<EOF
set -e
mkdir -p ~/.ssh
echo "$GIT_DEPLOY_KEY" > ~/.ssh/deploy_key
chmod 600 ~/.ssh/deploy_key
ssh-keyscan -H github.com >> ~/.ssh/known_hosts

if [ ! -d "$PROJECT_PATH/.git" ]; then
  mkdir -p "$(dirname "$PROJECT_PATH")"
  GIT_SSH_COMMAND="ssh -i ~/.ssh/deploy_key -o StrictHostKeyChecking=no" git clone "$GIT_REPO" "$PROJECT_PATH"
fi

cd "$PROJECT_PATH"
GIT_SSH_COMMAND="ssh -i ~/.ssh/deploy_key -o StrictHostKeyChecking=no" git fetch --all
GIT_SSH_COMMAND="ssh -i ~/.ssh/deploy_key -o StrictHostKeyChecking=no" git checkout main
GIT_SSH_COMMAND="ssh -i ~/.ssh/deploy_key -o StrictHostKeyChecking=no" git reset --hard origin/main
GIT_SSH_COMMAND="ssh -i ~/.ssh/deploy_key -o StrictHostKeyChecking=no" git pull origin main
EOF

          echo "Generando archivo .env remotamente"
          echo "$ENV_CONTENT" | ssh -p "$SSH_PORT" -i ~/.ssh/server_key -o StrictHostKeyChecking=no "$USER_NAME@$HOST_NAME" "cat > \"$PROJECT_PATH/.env\""
          echo "$ENV_CONTENT" | ssh -p "$SSH_PORT" -i ~/.ssh/server_key -o StrictHostKeyChecking=no "$USER_NAME@$HOST_NAME" "cat > \"$PROJECT_PATH/frontend/.env\""

          echo "Ejecutando make run"
          ssh -p "$SSH_PORT" -i ~/.ssh/server_key -o StrictHostKeyChecking=no "$USER_NAME@$HOST_NAME" "cd \"$PROJECT_PATH\" && make run"
